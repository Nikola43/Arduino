#include <Sprite.h>
#include <Matrix.h>


Sprite CH[] = {
{8, 4, B00000000, B00000000, B00000000, B00000000, B00000000}, // space
{8, 4, B01011111, B00000000, B00000000, B00000000, B00000000}, // !
{8, 4, B00000000, B00000000, B00000000, B00000000, B00000000}, // space
{8, 4, B01011111, B00000000, B00000000, B00000000, B00000000}, // !
{8, 4, B00000011, B00000000, B00000011, B00000000, B00000000}, // "
{8, 4, B00010100, B00111110, B00010100, B00111110, B00010100}, // #
{8, 4, B00100100, B01101010, B00101011, B00010010, B00000000}, // $
{8, 4, B01100011, B00010011, B00001000, B01100100, B01100011}, // %
{8, 4, B00110110, B01001001, B01010110, B00100000, B01010000}, // &
{8, 4, B00000011, B00000000, B00000000, B00000000, B00000000}, // '
{8, 4, B00011100, B00100010, B01000001, B00000000, B00000000}, // (
{8, 4, B01000001, B00100010, B00011100, B00000000, B00000000}, // )
{5, 8, B00101000, B00011000, B00001110, B00011000, B00101000}, // *
{5, 8, B00001000, B00001000, B00111110, B00001000, B00001000}, // +
{2, 8, B10110000, B01110000, B00000000, B00000000, B00000000}, // ,
{4, 8, B00001000, B00001000, B00001000, B00001000, B00000000}, // -
{2, 8, B01100000, B01100000, B00000000, B00000000, B00000000}, // .
{4, 8, B01100000, B00011000, B00000110, B00000001, B00000000}, // /
{8, 4, B00111110, B01000001, B01000001, B00111110, B00000000}, // 0
{8, 4, B01000010, B01111111, B01000000, B00000000, B00000000}, // 1
{8, 4, B01100010, B01010001, B01001001, B01000110, B00000000}, // 2
{8, 4, B00100010, B01000001, B01001001, B00110110, B00000000}, // 3
{8, 4, B00011000, B00010100, B00010010, B01111111, B00000000}, // 4
{8, 4, B00100111, B01000101, B01000101, B00111001, B00000000}, // 5
{8, 4, B00111110, B01001001, B01001001, B00110000, B00000000}, // 6
{8, 4, B01100001, B00010001, B00001001, B00000111, B00000000}, // 7
{8, 4, B00110110, B01001001, B01001001, B00110110, B00000000}, // 8
{8, 4, B00000110, B01001001, B01001001, B00111110, B00000000}, // 9
{8, 4, B01010000, B00000000, B00000000, B00000000, B00000000}, // :
{8, 4, B10000000, B01010000, B00000000, B00000000, B00000000}, // ;
{8, 4, B00010000, B00101000, B01000100, B00000000, B00000000}, // <
{8, 4, B00010100, B00010100, B00010100, B00000000, B00000000}, // =
{8, 4, B01000100, B00101000, B00010000, B00000000, B00000000}, // >
{8, 4, B00000010, B01011001, B00001001, B00000110, B00000000}, // ?
{8, 4, B00111110, B01001001, B01010101, B01011101, B00001110}, // @
{8, 4, B01111110, B00010001, B00010001, B01111110, B00000000}, // A
{8, 4, B01111111, B01001001, B01001001, B00110110, B00000000}, // B
{8, 4, B00111110, B01000001, B01000001, B00100010, B00000000}, // C
{8, 4, B01111111, B01000001, B01000001, B00111110, B00000000}, // D
{8, 4, B01111111, B01001001, B01001001, B01000001, B00000000}, // E
{8, 4, B01111111, B00001001, B00001001, B00000001, B00000000}, // F
{8, 4, B00111110, B01000001, B01001001, B01111010, B00000000}, // G
{8, 4, B01111111, B00001000, B00001000, B01111111, B00000000}, // H
{8, 4, B01000001, B01111111, B01000001, B00000000, B00000000}, // I
{8, 4, B00110000, B01000000, B01000001, B00111111, B00000000}, // J
{8, 4, B01111111, B00001000, B00010100, B01100011, B00000000}, // K
{8, 4, B01111111, B01000000, B01000000, B01000000, B00000000}, // L
{8, 4, B01111111, B00000010, B00001100, B00000010, B01111111}, // M
{8, 4, B01111111, B00000100, B00001000, B00010000, B01111111}, // N
{8, 4, B00111110, B01000001, B01000001, B00111110, B00000000}, // O
{8, 4, B01111111, B00001001, B00001001, B00000110, B00000000}, // P
{8, 4, B00111110, B01000001, B01000001, B10111110, B00000000}, // Q
{8, 4, B01111111, B00001001, B00001001, B01110110, B00000000}, // R
{8, 4, B01000110, B01001001, B01001001, B00110010, B00000000}, // S
{8, 4, B00000001, B00000001, B01111111, B00000001, B00000001}, // T
{8, 4, B00111111, B01000000, B01000000, B00111111, B00000000}, // U
{8, 4, B00001111, B00110000, B01000000, B00110000, B00001111}, // V
{8, 4, B00111111, B01000000, B00111000, B01000000, B00111111}, // W
{8, 4, B01100011, B00010100, B00001000, B00010100, B01100011}, // X
{8, 4, B00000111, B00001000, B01110000, B00001000, B00000111}, // Y
{8, 4, B01100001, B01010001, B01001001, B01000111, B00000000}, // Z
{8, 4, B01111111, B01000001, B00000000, B00000000, B00000000}, // [
{8, 4, B00000001, B00000110, B00011000, B01100000, B00000000}, // \ backslash
{8, 4, B01000001, B01111111, B00000000, B00000000, B00000000}, // ]
{8, 4, B00000010, B00000001, B00000010, B00000000, B00000000}, // hat
{8, 4, B01000000, B01000000, B01000000, B01000000, B00000000}, // _
{8, 4, B00000001, B00000010, B00000000, B00000000, B00000000}, // `
{8, 4, B00100000, B01010100, B01010100, B01111000, B00000000}, // a
{8, 4, B01111111, B01000100, B01000100, B00111000, B00000000}, // b
{8, 4, B00111000, B01000100, B01000100, B00101000, B00000000}, // c
{8, 4, B00111000, B01000100, B01000100, B01111111, B00000000}, // d
{8, 4, B00111000, B01010100, B01010100, B00011000, B00000000}, // e
{8, 4, B00000100, B01111110, B00000101, B00000000, B00000000}, // f
{8, 4, B10011000, B10100100, B10100100, B01111000, B00000000}, // g
{8, 4, B01111111, B00000100, B00000100, B01111000, B00000000}, // h
{8, 4, B01000100, B01111101, B01000000, B00000000, B00000000}, // i
{8, 4, B01000000, B10000000, B10000100, B01111101, B00000000}, // j
{8, 4, B01111111, B00010000, B00101000, B01000100, B00000000}, // k
{8, 4, B01000001, B01111111, B01000000, B00000000, B00000000}, // l
{8, 4, B01111100, B00000100, B01111100, B00000100, B01111000}, // m
{8, 4, B01111100, B00000100, B00000100, B01111000, B00000000}, // n
{8, 4, B00111000, B01000100, B01000100, B00111000, B00000000}, // o
{8, 4, B11111100, B00100100, B00100100, B00011000, B00000000}, // p
{8, 4, B00011000, B00100100, B00100100, B11111100, B00000000}, // q
{8, 4, B01111100, B00001000, B00000100, B00000100, B00000000}, // r
{8, 4, B01001000, B01010100, B01010100, B00100100, B00000000}, // s
{8, 4, B00000100, B00111111, B01000100, B00000000, B00000000}, // t
{8, 4, B00111100, B01000000, B01000000, B01111100, B00000000}, // u
{8, 4, B00011100, B00100000, B01000000, B00100000, B00011100}, // v
{8, 4, B00111100, B01000000, B00111100, B01000000, B00111100}, // w
{8, 4, B01000100, B00101000, B00010000, B00101000, B01000100}, // x
{8, 4, B10011100, B10100000, B10100000, B01111100, B00000000}, // y
{8, 4, B01100100, B01010100, B01001100, B00000000, B00000000}, // z
{8, 4, B00001000, B00110110, B01000001, B00000000, B00000000}, // {
{8, 4, B01111111, B00000000, B00000000, B00000000, B00000000}, // |
{8, 4, B01000001, B00110110, B00001000, B00000000, B00000000}, // }
{8, 4, B00001000, B00000100, B00001000, B00000100, B00000000} // ~
};

/* create a new Matrix instance
   pin 0: data  (din)
   pin 1: load  (load)
   pin 2: clock (clk)
*/
Matrix myMatrix = Matrix(5, 7, 6);

Sprite un = Sprite(
8, 4, B01100010, B01010001, B01001001, B01000110, B00000000
);
void setup()
{ 
  myMatrix.setBrightness(2);
}

int x = 0;

void loop()
{
  myMatrix.write(0, 0, CH[45]);     // place sprite on screen
  /*
  for ( int i = 0; i < 20; i++)
  {
      myMatrix.write(0, 0, CH[i]);     // place sprite on screen
      delay(500);
      myMatrix.clear();
  }*/

}

